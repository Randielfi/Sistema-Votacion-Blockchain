// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using backend.Data;

#nullable disable

namespace backend.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("backend.Models.Candidate", b =>
                {
                    b.Property<int>("IdCandidato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("IdCandidato");

                    b.ToTable("Candidates");
                });

            modelBuilder.Entity("backend.Models.Election", b =>
                {
                    b.Property<int>("IdEleccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ElectionIdOnChain")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Iniciada")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Terminada")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TituloEleccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.HasKey("IdEleccion");

                    b.ToTable("Elections");
                });

            modelBuilder.Entity("backend.Models.ElectionCandidate", b =>
                {
                    b.Property<int>("IdEleccion")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdCandidato")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CandidateIndex")
                        .HasColumnType("INTEGER");

                    b.HasKey("IdEleccion", "IdCandidato");

                    b.HasIndex("IdCandidato");

                    b.ToTable("ElectionCandidates");
                });

            modelBuilder.Entity("backend.Models.ElectionSignature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<uint>("ElectionIdOnChain")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("FechaFirma")
                        .HasColumnType("TEXT");

                    b.Property<string>("IntegrityHash")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("TEXT");

                    b.Property<string>("ObserverName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ObserverPublicKey")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<string>("ObserverSignature")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("ElectionSignatures");
                });

            modelBuilder.Entity("backend.Models.Vote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("IdEleccion")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IdEleccion");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("backend.Models.Voter", b =>
                {
                    b.Property<int>("IdVotante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Contraseña")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("Nonce")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroCedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<string>("Wallet")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("IdVotante");

                    b.HasIndex("NumeroCedula")
                        .IsUnique();

                    b.HasIndex("Wallet")
                        .IsUnique();

                    b.ToTable("Voters");
                });

            modelBuilder.Entity("backend.Models.ElectionCandidate", b =>
                {
                    b.HasOne("backend.Models.Candidate", "Candidate")
                        .WithMany("ElectionCandidates")
                        .HasForeignKey("IdCandidato")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("backend.Models.Election", "Election")
                        .WithMany("ElectionCandidates")
                        .HasForeignKey("IdEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Candidate");

                    b.Navigation("Election");
                });

            modelBuilder.Entity("backend.Models.Vote", b =>
                {
                    b.HasOne("backend.Models.Election", "Election")
                        .WithMany("Votes")
                        .HasForeignKey("IdEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Election");
                });

            modelBuilder.Entity("backend.Models.Candidate", b =>
                {
                    b.Navigation("ElectionCandidates");
                });

            modelBuilder.Entity("backend.Models.Election", b =>
                {
                    b.Navigation("ElectionCandidates");

                    b.Navigation("Votes");
                });
#pragma warning restore 612, 618
        }
    }
}
